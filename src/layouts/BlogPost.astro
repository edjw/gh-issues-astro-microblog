---
import type { GithubIssueWithSlug } from "../data/getGithubIssues";

import FormattedDate from "../components/FormattedDate.astro";
import { parseMD } from "../utils/parseMD";
import BaseLayout from "./BaseLayout.astro";
import { showTitles } from "../consts";

const isDev = import.meta.env.MODE === "development";

type Props = GithubIssueWithSlug;

const { title, body, created_at, updated_at, html_url, labels, slug } = Astro.props;
---

<BaseLayout title={title} description={title} image={`/image/${slug}.png`}>
  <article class="flex flex-col gap-y-28 border rounded-lg">
    <div class="px-4 py-4 max-w-full">
      {showTitles && <h2 class=" mt-0">{title}</h2>}
      {
        body !== undefined && body !== null && (
          <Fragment set:html={parseMD(body)} />
        )
      }
    </div>

    <div class="flex flex-col gap-y-4 px-4 py-4 bg-gray-200 dark:bg-gray-700 w-full self-start rounded-b-lg">
      {
        labels !== undefined && labels.length > 0 && (
          <div class="flex sm:items-center flex-col sm:flex-row gap-x-2">
            <ul class="flex list-none pl-0 my-0 gap-x-2">
              {labels.map((label) => (
                <li class="my-0 px-0">
                  {typeof label !== "string" ? (
                    <a
                      href={`/tags/${label.name}`}
                      class="before:content-['#'] before:-mr-1 font-normal text-sm no-underline hover:underline"
                    >
                      {label.name}
                    </a>
                  ) : (
                    <a
                      href={`/tags/${label}`}
                      class="before:content-['#'] before:-mr-1 font-normal text-sm no-underline hover:underline"
                    >
                      #{label}
                    </a>
                  )}
                </li>
              ))}
            </ul>
          </div>
        )
      }
      <div class="flex flex-col">
        <p class="my-0 text-sm">
          <span class="font-semibold">Posted</span>: <FormattedDate
            date={created_at}
          />
        </p>

        {
          updated_at && updated_at !== created_at && (
            <p class="my-0 text-sm">
              <span class="font-semibold">Last updated</span>:{" "}
              <FormattedDate date={updated_at} />
            </p>
          )
        }
      </div>
      {
        isDev && html_url !== undefined && (
          <div>
            <a
              href={html_url}
              class="font-normal text-sm no-underline hover:underline"
              target="_blank"
              rel="noopener noreferrer"
            >
              View on GitHub
            </a>
          </div>
        )
      }
    </div>
  </article>
  <p class="pt-0">
    <a
      href="/"
      class="text-sm font-normal no-underline hover:underline before:content-['←']"
    >
      Back to all posts</a
    >
  </p>
</BaseLayout>
