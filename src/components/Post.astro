---
import RelativeDate from "../components/RelativeDate.astro";
import { parseMD } from "../utils/parseMD";
import { showTags, showTitles } from "../consts";
import { formatDate } from "../utils/formatDate";

import type { Label } from "../pages/tags/index.astro";
type Props = {
  title: string;
  slug: string;
  created_at: string;
  body: string | null | undefined;
  labels: Label[];
};

const { title, slug, created_at, body, labels } = Astro.props;
---

<li
  class="flex flex-col border hover:shadow-xl p-0 rounded-lg gap-y-8 relative overflow-hidden"
>
  <a
    href={`/${slug}/`}
    class="mt-0 text-right linkToPost absolute right-2 top-2"
  >
    <span class="sr-only">Link to post</span>
  </a>
  <div class="px-8 pt-4">
    {
      showTitles && (
        <h2 class="font-semibold text-lg mt-0">
          <a href={`/${slug}/`}>{title}</a>
        </h2>
      )
    }

    {
      body !== null && body !== undefined && (
        <div class="prose" set:html={parseMD(body)} />
      )
    }
  </div>

  <div
    class="mb-0 flex flex-col sm:flex-row justify-center sm:justify-between sm:items-center bg-gray-200 px-8 py-4 gap-y-2"
  >
    <p class="my-0 text-sm" title={formatDate(created_at)}>
      <a href={`/${slug}/`} class="no-underline hover:underline font-normal">
        <RelativeDate date={created_at} />
      </a>
    </p>

    {
      showTags && labels.length > 0 && (
        <ul class="flex gap-x-2 list-none my-0 pl-0">
          {labels.map(({ name }) => (
            <li class="my-0 pl-0">
              <a
                href={`/tags/${name}/`}
                class="hover:underline no-underline before:content-['#'] before:-mr-1 text-sm font-normal"
              >
                {name}
              </a>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</li>

<style>
  a.linkToPost::after {
    content: "";
    width: 16px;
    height: 16px;
    margin-left: 1px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z'/%3E%3Cpath fill-rule='evenodd' d='M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    display: inline-block;
  }
</style>
