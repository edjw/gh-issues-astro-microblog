---
import { Image } from "@astrojs/image/components";
import scrapeOpenGraphData from "open-graph-scraper";

import probeImageSize from "probe-image-size";
import type { ProbeResult } from "probe-image-size";

import metaParser from "metascraper";
import type { Metadata } from "metascraper";
import metascraperDescription from "metascraper-description";
import metascraperTitle from "metascraper-title";
import metascraperImage from "metascraper-image";
import metascraperAuthor from "metascraper-author";

const metascraper = metaParser([
  metascraperAuthor(),
  metascraperImage(),
  metascraperDescription(),
  metascraperTitle(),
]);

type Props = {
  linkURL: string;
};

const { linkURL } = Astro.props;
const url = linkURL.replace(").", "").replace(")", "");

const scrapeResult = await scrapeOpenGraphData({ url });

// console.log("scraperesult", scrapeResult);

const { error, result, response } = scrapeResult;

let html = "";
// @ts-ignore
if (typeof response !== "undefined" && typeof response.body !== "undefined") {
  // console.log(Object.keys(response));
  // @ts-ignore
  html = response.body;
}

let title: string | undefined;
let description: string | undefined;
let image: string | undefined;
let author: string | undefined;
let linkMetadata: Metadata;

linkMetadata = await metascraper({
  html,
  url: linkURL,
});

title = linkMetadata.title || "";
description = linkMetadata.description || "";
image = linkMetadata.image || "";
author = linkMetadata.author || "";

let width = 0;
let height = 0;

let imageDimensions: ProbeResult;

if (image !== "") {
  imageDimensions = await probeImageSize(image);
  width = imageDimensions.width;
  height = imageDimensions.height;
}
---

<hr class="my-0 h-4" />
<a href={linkURL} class="no-underline font-normal not-prose">
  <section
    class="border border-gray-100 dark:border-gray-600 rounded px-4 py-4 flex flex-col gap-y-4"
  >
    {
      image !== "" && width !== undefined && height !== undefined && (
        <Image src={image} width={width} height={height} alt="" />
      )
    }

    <div class="flex flex-col">
      {title !== "" && <h3 class="leading-tight font-semibold">{title}</h3>}
      {
        author !== "" && (
          <p class="leading-normal text-gray-600 dark:text-gray-300 text-sm">
            {author}
          </p>
        )
      }
      {description !== "" && <p class="leading-snug mt-4">{description}</p>}
    </div>
  </section>
</a>
